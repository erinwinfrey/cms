# Django settings for cms project.
import logging
import ldap
from django_auth_ldap.config import LDAPSearch, ActiveDirectoryGroupType

DEBUG = False
TEMPLATE_DEBUG = DEBUG

ADMINS = (
	('Patrick Beeson', 'pbeeson@vt.edu'),
)

MANAGERS = (
	('Patrick Beeson', 'pbeeson@vt.edu'),('Paula Byron', 'paulabyron@vtc.vt.edu')
)

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql_psycopg2', # Add 'postgresql_psycopg2', 'postgresql', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': 'cms',                      # Or path to database file if using sqlite3.
        'USER': 'svc_cmsdb',                      # Not used with sqlite3.
        'PASSWORD': 'VTCRI2010',                  # Not used with sqlite3.
        'HOST': 'gump.vtcri.local',                      # Set to empty string for localhost. Not used with sqlite3.
        'PORT': '',                      # Set to empty string for default. Not used with sqlite3.
    }
}

# Local time zone for this installation. Choices can be found here:
# http://en.wikipedia.org/wiki/List_of_tz_zones_by_name
# although not all choices may be available on all operating systems.
# On Unix systems, a value of None will cause Django to use the same
# timezone as the operating system.
# If running in a Windows environment this must be set to the same as your
# system time zone.
TIME_ZONE = 'America/New_York'

# Language code for this installation. All choices can be found here:
# http://www.i18nguy.com/unicode/language-identifiers.html
LANGUAGE_CODE = 'en-us'

SITE_ID = 1

# If you set this to False, Django will make some optimizations so as not
# to load the internationalization machinery.
USE_I18N = False

# If you set this to False, Django will not format dates, numbers and
# calendars according to the current locale
USE_L10N = True

# Absolute filesystem path to the directory that will hold user-uploaded files.
# Example: "/home/media/media.lawrence.com/media/"
MEDIA_ROOT = '/var/www/static/'

# URL that handles the media served from MEDIA_ROOT. Make sure to use a
# trailing slash.
# Examples: "http://media.lawrence.com/media/", "http://example.com/media/"
MEDIA_URL = 'http://static.vtc.vt.edu/'

# Absolute path to the directory static files should be collected to.
# Don't put anything in this directory yourself; store your static files
# in apps' "static/" subdirectories and in STATICFILES_DIRS.
# Example: "/home/media/media.lawrence.com/static/"
STATIC_ROOT = '/var/www/static/'

# URL prefix for static files.
# Example: "http://media.lawrence.com/static/"
STATIC_URL = 'http://static.vtc.vt.edu/'

# URL prefix for admin static files -- CSS, JavaScript and images.
# Make sure to use a trailing slash.
# Examples: "http://foo.com/static/admin/", "/static/admin/".
ADMIN_MEDIA_PREFIX = 'http://static.vtc.vt.edu/admin_media/'

# Additional locations of static files
STATICFILES_DIRS = (
    # Put strings here, like "/home/html/static" or "C:/www/django/static".
    # Always use forward slashes, even on Windows.
    # Don't forget to use absolute paths, not relative paths.
)

# List of finder classes that know how to find static files in
# various locations.
STATICFILES_FINDERS = (
    'django.contrib.staticfiles.finders.FileSystemFinder',
    'django.contrib.staticfiles.finders.AppDirectoriesFinder',
#    'django.contrib.staticfiles.finders.DefaultStorageFinder',
)

# Make this unique, and don't share it with anybody.
SECRET_KEY = 'debvcw4c0@1n@)4rur48tlizvw#w&x16u@co#6744ke)vfds%*'

# List of callables that know how to import templates from various sources.
TEMPLATE_LOADERS = (
    'django.template.loaders.filesystem.Loader',
    'django.template.loaders.app_directories.Loader',
#     'django.template.loaders.eggs.Loader',
)

MIDDLEWARE_CLASSES = (
    'django.middleware.common.CommonMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
	'django.contrib.redirects.middleware.RedirectFallbackMiddleware',
)

ROOT_URLCONF = 'cms.urls'

TEMPLATE_DIRS = (
	"/var/www/django/templates/cms"
    # Put strings here, like "/home/html/django_templates" or "C:/www/django/templates".
    # Always use forward slashes, even on Windows.
    # Don't forget to use absolute paths, not relative paths.
)

CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
        'LOCATION': '_django_cache',
        'TIMEOUT': 300,
        'OPTIONS': {
        	'MAX_ENTRIES': 300,
        	'CULL_FREQUENCY': 2,
        }       
    }
}

INSTALLED_APPS = (
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.sites',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.flatpages',
	'django.contrib.admin',
	'django.contrib.admindocs',
	'django.contrib.sitemaps',
	'django.contrib.humanize',
	'django.contrib.redirects',
	'django.contrib.webdesign',
	'cms.news',
	'cms.media',
	'cms.categories',
	'cms.related_links',
	'cms.employees',
	'cms.static_media',
	'cms.places',
	'cms.events',
	'cms.jobs',
	'cms.press',
	'cms.topics',
	'cms.featured',
	'tagging',
	'template_utils',
	'contact_form',
#	'haystack',
	'shorturls',
	'django_auth_ldap',
)

# A sample logging configuration. The only tangible logging
# performed by this configuration is to send an email to
# the site admins on every HTTP 500 error.
# See http://docs.djangoproject.com/en/dev/topics/logging for
# more details on how to customize your logging configuration.
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'mail_admins': {
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler'
        }
    },
    'loggers': {
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': True,
        },
    }
}

SHORTEN_MODELS = {
	'S': 'news.story',
	'E': 'events.event',
	'G': 'media.galleries',
	'V': 'media.videos',
	'P': 'media.photos',
	'A': 'media.audio',
}

FORCE_LOWERCASE_TAGS = True

#SHORT_BASE_URL = "http://cms-dev.vtc.vt.edu/"

SHORTEN_FULL_BASE_URL = "http://research.vtc.vt.edu/"

AUTH_PROFILE_MODULE = "employees.Employee"

#HAYSTACK_SEARCH_ENGINE = 'simple'

#HAYSTACK_SITECONF = 'cms.search_sites'

AKISMET_API_KEY = '486ca9375a6b'

DEFAULT_FROM_EMAIL = 'noreply@vtc.vt.edu'

SEND_BROKEN_LINK_EMAILS = True

SERVER_EMAIL = 'webmaster@vtc.vt.edu'


# Baseline configuration.
AUTH_LDAP_SERVER_URI = "ldap://wasket.vtcri.local"

AUTH_LDAP_BIND_DN = "CN=LDAP Query,OU=VTCRI Service Accounts,DC=vtcri,DC=local"
AUTH_LDAP_BIND_PASSWORD = "vtcri2010"
AUTH_LDAP_USER_SEARCH = LDAPSearch("OU=VTCRI Users,DC=vtcri,DC=local", ldap.SCOPE_SUBTREE, "(sAMAccountName=%(user)s)")
# or perhaps:
# AUTH_LDAP_USER_DN_TEMPLATE = "uid=%(user)s,ou=users,dc=example,dc=com"

# Set up the basic group parameters.
AUTH_LDAP_GROUP_SEARCH = LDAPSearch("OU=VTCRI Groups,DC=vtcri,DC=local", ldap.SCOPE_SUBTREE, "(objectClass=group)")
AUTH_LDAP_GROUP_TYPE = ActiveDirectoryGroupType()

AUTH_LDAP_MIRROR_GROUPS = False
# Only users in this group can log in.
AUTH_LDAP_REQUIRE_GROUP = "CN=VTCRI_CMS,OU=Security Groups,OU=VTCRI Groups,DC=vtcri,DC=local"

# Populate the Django user from the LDAP directory.
AUTH_LDAP_USER_ATTR_MAP = {
    "first_name": "givenName",
    "last_name": "sn",
    "email": "mail"
}

# #### JMK ####
AUTH_LDAP_PROFILE_ATTR_MAP = {
    "employee_number": "employeeNumber"
}

# #### JMK ####
AUTH_LDAP_USER_FLAGS_BY_GROUP = {
    "is_active": "CN=VTCRI_CMS,OU=Security Groups,OU=VTCRI Groups,DC=vtcri,DC=local",
    "is_staff": "CN=VTCRI_CMS,OU=Security Groups,OU=VTCRI Groups,DC=vtcri,DC=local",
    "is_superuser": "CN=Webadmin,OU=Security Groups,OU=VTCRI Groups,DC=vtcri,DC=local"
}

# This is the default, but I like to be explicit.
AUTH_LDAP_ALWAYS_UPDATE_USER = True

# Use LDAP group membership to calculate group permissions.
AUTH_LDAP_FIND_GROUP_PERMS = True

# Cache group memberships for an hour to minimize LDAP traffic
AUTH_LDAP_CACHE_GROUPS = True
AUTH_LDAP_GROUP_CACHE_TIMEOUT = 3600


# Keep ModelBackend around for per-user permissions and maybe a local
# superuser.
AUTHENTICATION_BACKENDS = (
    'django_auth_ldap.backend.LDAPBackend',
    'django.contrib.auth.backends.ModelBackend',
)

'''
logging.basicConfig(
    level = logging.DEBUG,
    format = '%(asctime)s %(levelname)s %(message)s',
    filename = '/tmp/vtcri-cms-debug.log',
    filemode = 'w'
)

logger = logging.getLogger('django_auth_ldap')
logger.addHandler(logging.StreamHandler())
logger.setLevel(logging.DEBUG)
'''
